name: Flutter CI

# Controls when the workflow will run
on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+-ecg"
      - "[0-9]+.[0-9]+.[0-9]+-beta-ecg"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Runs a set of commands using the runners shell
      - name: Customizing
        run: |
          version="${{ github.ref_name }}"
          ver_dump=$(echo "${version/-ecg/""}")
          chmod +x customize
          ./customize
          sed -i -E "s/       versionName flutterVersionName/       versionName \"$ver_dump\"/" "./mml.app/android/app/build.gradle"
          sed -i -E "s/        versionCode flutterVersionCode.toInteger()/        versionCode ${{github.run_number}}/" "./mml.app/android/app/build.gradle"
      - name: Artefact customized version
        uses: actions/upload-artifact@v3
        with:
          name: ECG-Medialib-Custom
          path: mml.app
        
  build-android:
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: ECG-Medialib-Custom
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: |
          flutter pub run build_runner build --delete-conflicting-outputs
          flutter gen-l10n
      - name: Write jks
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: 'upload-ecgm.jks'
          fileDir: './android/app/'
          encodedString: ${{ secrets.ANDROID_JKS }}
      - name: Write key.properties
        run: |
          echo "storePassword=${{ secrets.ANDROID_JKS_PASS }}" >> ./android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_JKS_PASS }}" >> ./android/key.properties
          echo "keyAlias=ecgm" >> ./android/key.properties
          echo "storeFile=upload-ecgm.jks" >> ./android/key.properties
      - name: Build artifacts
        run: |
          flutter build appbundle --release --scan
      - name: Cleanup
        run: |
          rm ./android/app/upload-ecgm.jks
          rm ./android/key.properties
          mv build/app/outputs/bundle/release/app-release.aab build/app/outputs/bundle/release/ecgm-${{ github.ref_name }}.aab
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ECG-Medialib-Android
          path: build/app/outputs/bundle/release
  
  release-android:
    runs-on: ubuntu-latest
    needs: [build-android]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: ECG-Medialib-Android
      - name: Android Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/app/outputs/bundle/release/ecgm-${{ github.ref_name }}.aab
      # todo upload to play store automatically